<template>
	<view class="player-wrapper">
		<mlyplayer ref="player" :src="src" :autoplay="autoplay" :muted="muted" :controls="controls"
			:isMonitorAllowed="isMonitorAllowed" :isLoaderAllowed="isLoaderAllowed" :style="{width,height}"></mlyplayer>
	</view>
</template>

<script>
	let systemInfo = undefined
	let nvue = undefined
	export default {
		data() {
			return {
				width: '750rpx',
				height: '421.875rpx',
				src: "https://vsp-stream.s3.ap-northeast-1.amazonaws.com/HLS/raw/SpaceX.m3u8",
				autoplay: true,
				muted: false,
				controls: true,
				isMonitorAllowed: true,
				isLoaderAllowed: true,
			}
		},
		onReady() {
			this.videosize()
		},
		destroyed() {
			this.onStop()
			uni.$off('start', this.onStart)
			uni.$off('stop', this.onStop)
			uni.$off('play', this.onplay)
			uni.$off('pause', this.onpause)
			uni.$off('muted', this.onMuted)
			uni.$off('controls', this.onControls)
			uni.$off('isMonitorAllowed', this.onMonitorAllowed)
			uni.$off('isLoaderAllowed', this.onLoaderAllowed)
		},
		created() {
			uni.$on('start', this.onStart)
			uni.$on('stop', this.onStop)
			uni.$on('play', this.onplay)
			uni.$on('pause', this.onpause)
			uni.$on('muted', this.onMuted)
			uni.$on('controls', this.onControls)
			uni.$on('isMonitorAllowed', this.onMonitorAllowed)
			uni.$on('isLoaderAllowed', this.onLoaderAllowed)
		},
		methods: {
			onStart() {
				this.$refs.player.start()
			},
			onStop() {
				this.$refs.player.stop()
			},
			onplay() {
				this.$refs.player.play()
			},
			onpause() {
				this.$refs.player.pause()
			},
			onMuted(muted) {
				this.muted = muted
			},
			onControls(controls) {
				this.controls = controls
			},
			onMonitorAllowed(isMonitorAllowed) {
				this.isMonitorAllowed = isMonitorAllowed
			},
			onLoaderAllowed(isLoaderAllowed) {
				this.isLoaderAllowed = isLoaderAllowed
			},
			videosize() {
				systemInfo = systemInfo || uni.getSystemInfoSync()
				let portrait = systemInfo.windowWidth < systemInfo.windowHeight

				nvue = nvue || uni.getCurrentSubNVue()

				let w = systemInfo.windowWidth
				let h = portrait ? w * 9 / 16 : systemInfo.windowHeight
				let t = portrait ? systemInfo.statusBarHeight + 49 : 0

				this.width = w + 'px'
				this.height = h + 'px'
				this.top = t + 'px'

				nvue.setStyle({
					width: this.width,
					height: this.height,
					top: this.top
				})
			}
		}
	}
</script>

<style>
	.player-wrapper {
		position: fixed;
		left: 0;
		right: 0;
		top: 0;
		bottom: 0;
		background-color: #000;
	}
</style>